{"version":3,"names":["request","require","expect","BASE_URL","process","env","API_BASE_URL","API_PREFIX","authToken","describe","before","loginResponse","post","send","username","password","status","to","equal","body","data","token","it","response","get","set","success","be","true","have","property","an","length","overdueDetails","reportConfig","name","description","type","parameters","dateRange","groupBy","metrics","schedule","queryConfig","entity","filters","createdDate","start","end","orderBy","limit","results","exportConfig","format","includeCharts","headers","include","startTime","Date","now","endTime","responseTime","lessThan","promises","endpoints","forEach","endpoint","push","responses","Promise","all"],"sources":["statistics-api.test.js"],"sourcesContent":["const request = require('supertest');\nconst { expect } = require('chai');\n\n// 测试配置\nconst BASE_URL = process.env.API_BASE_URL || 'http://localhost:8080';\nconst API_PREFIX = '/api';\n\n// 测试数据\nlet authToken = '';\n\ndescribe('统计分析 API 测试', () => {\n  // 测试前的准备工作\n  before(async () => {\n    // 登录获取认证token\n    const loginResponse = await request(BASE_URL)\n      .post(`${API_PREFIX}/api/auth/login`)\n      .send({\n        username: 'admin',\n        password: 'admin123'\n      });\n    \n    expect(loginResponse.status).to.equal(200);\n    authToken = loginResponse.body.data.token;\n  });\n\n  describe('总体统计 API', () => {\n    it('应该能够获取系统总体统计数据', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/overview`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('totalUsers');\n      expect(response.body.data).to.have.property('totalOrganizations');\n      expect(response.body.data).to.have.property('totalActivities');\n      expect(response.body.data).to.have.property('activeUsers');\n      expect(response.body.data).to.have.property('totalFeeAmount');\n      expect(response.body.data).to.have.property('paidFeeAmount');\n      expect(response.body.data).to.have.property('unpaidFeeAmount');\n    });\n\n    it('应该能够获取实时统计数据', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/realtime`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('onlineUsers');\n      expect(response.body.data).to.have.property('todayLogins');\n      expect(response.body.data).to.have.property('todayActivities');\n      expect(response.body.data).to.have.property('todayFeePayments');\n    });\n\n    it('应该能够获取系统健康状态统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/system-health`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('cpuUsage');\n      expect(response.body.data).to.have.property('memoryUsage');\n      expect(response.body.data).to.have.property('diskUsage');\n      expect(response.body.data).to.have.property('databaseConnections');\n    });\n  });\n\n  describe('用户统计 API', () => {\n    it('应该能够获取用户增长趋势', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/users/growth-trend?period=30`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('date');\n        expect(response.body.data[0]).to.have.property('count');\n      }\n    });\n\n    it('应该能够获取用户年龄分布统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/users/age-distribution`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('ageRange');\n        expect(response.body.data[0]).to.have.property('count');\n      }\n    });\n\n    it('应该能够获取用户性别分布统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/users/gender-distribution`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('gender');\n        expect(response.body.data[0]).to.have.property('count');\n      }\n    });\n\n    it('应该能够获取用户活跃度统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/users/activity-level?period=30`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('highlyActive');\n      expect(response.body.data).to.have.property('moderatelyActive');\n      expect(response.body.data).to.have.property('lowActive');\n      expect(response.body.data).to.have.property('inactive');\n    });\n\n    it('应该能够获取用户登录统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/users/login-stats?period=7`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('date');\n        expect(response.body.data[0]).to.have.property('loginCount');\n        expect(response.body.data[0]).to.have.property('uniqueUsers');\n      }\n    });\n  });\n\n  describe('组织统计 API', () => {\n    it('应该能够获取组织分布统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/organizations/distribution`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('organizationName');\n        expect(response.body.data[0]).to.have.property('memberCount');\n      }\n    });\n\n    it('应该能够获取组织成员增长趋势', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/organizations/member-growth?period=30`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('date');\n        expect(response.body.data[0]).to.have.property('memberCount');\n      }\n    });\n\n    it('应该能够获取组织活动统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/organizations/activity-stats`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('organizationName');\n        expect(response.body.data[0]).to.have.property('activityCount');\n        expect(response.body.data[0]).to.have.property('participantCount');\n      }\n    });\n\n    it('应该能够获取组织排行榜', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/organizations/ranking?type=member&limit=10`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('organizationName');\n        expect(response.body.data[0]).to.have.property('score');\n        expect(response.body.data[0]).to.have.property('rank');\n      }\n    });\n  });\n\n  describe('活动统计 API', () => {\n    it('应该能够获取活动统计概览', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/activities/overview`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('totalActivities');\n      expect(response.body.data).to.have.property('ongoingActivities');\n      expect(response.body.data).to.have.property('completedActivities');\n      expect(response.body.data).to.have.property('totalParticipants');\n      expect(response.body.data).to.have.property('averageParticipation');\n    });\n\n    it('应该能够获取活动类型分布', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/activities/type-distribution`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('activityType');\n        expect(response.body.data[0]).to.have.property('count');\n      }\n    });\n\n    it('应该能够获取活动参与度趋势', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/activities/participation-trend?period=30`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('date');\n        expect(response.body.data[0]).to.have.property('participantCount');\n        expect(response.body.data[0]).to.have.property('activityCount');\n      }\n    });\n\n    it('应该能够获取热门活动排行', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/activities/popular?limit=10`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('activityName');\n        expect(response.body.data[0]).to.have.property('participantCount');\n        expect(response.body.data[0]).to.have.property('rating');\n      }\n    });\n  });\n\n  describe('党费统计 API', () => {\n    it('应该能够获取党费收缴概览', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/fees/overview`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('totalAmount');\n      expect(response.body.data).to.have.property('paidAmount');\n      expect(response.body.data).to.have.property('unpaidAmount');\n      expect(response.body.data).to.have.property('paymentRate');\n      expect(response.body.data).to.have.property('totalMembers');\n      expect(response.body.data).to.have.property('paidMembers');\n    });\n\n    it('应该能够获取党费收缴趋势', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/fees/payment-trend?period=12&type=month`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('period');\n        expect(response.body.data[0]).to.have.property('amount');\n        expect(response.body.data[0]).to.have.property('count');\n      }\n    });\n\n    it('应该能够获取党费支付方式统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/fees/payment-methods`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('paymentMethod');\n        expect(response.body.data[0]).to.have.property('amount');\n        expect(response.body.data[0]).to.have.property('count');\n      }\n    });\n\n    it('应该能够获取组织党费收缴排行', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/fees/organization-ranking?limit=10`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n      \n      if (response.body.data.length > 0) {\n        expect(response.body.data[0]).to.have.property('organizationName');\n        expect(response.body.data[0]).to.have.property('totalAmount');\n        expect(response.body.data[0]).to.have.property('paymentRate');\n        expect(response.body.data[0]).to.have.property('rank');\n      }\n    });\n\n    it('应该能够获取党费欠费统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/fees/overdue`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('overdueAmount');\n      expect(response.body.data).to.have.property('overdueMembers');\n      expect(response.body.data).to.have.property('overdueDetails');\n      expect(response.body.data.overdueDetails).to.be.an('array');\n    });\n  });\n\n  describe('自定义统计 API', () => {\n    it('应该能够创建自定义统计报表', async () => {\n      const reportConfig = {\n        name: '测试报表',\n        description: '用于API测试的自定义报表',\n        type: 'USER_STATISTICS',\n        parameters: {\n          dateRange: '30',\n          groupBy: 'organization',\n          metrics: ['count', 'growth']\n        },\n        schedule: 'MANUAL'\n      };\n\n      const response = await request(BASE_URL)\n        .post(`${API_PREFIX}/statistics/custom-reports`)\n        .set('Authorization', `Bearer ${authToken}`)\n        .send(reportConfig);\n\n      expect(response.status).to.equal(201);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('id');\n      expect(response.body.data.name).to.equal(reportConfig.name);\n    });\n\n    it('应该能够执行自定义统计查询', async () => {\n      const queryConfig = {\n        entity: 'User',\n        metrics: ['count', 'avg_age'],\n        groupBy: ['organization', 'gender'],\n        filters: {\n          status: 'ACTIVE',\n          createdDate: {\n            start: '2024-01-01',\n            end: '2024-12-31'\n          }\n        },\n        orderBy: 'count DESC',\n        limit: 100\n      };\n\n      const response = await request(BASE_URL)\n        .post(`${API_PREFIX}/statistics/custom-query`)\n        .set('Authorization', `Bearer ${authToken}`)\n        .send(queryConfig);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('results');\n      expect(response.body.data).to.have.property('totalCount');\n      expect(response.body.data.results).to.be.an('array');\n    });\n\n    it('应该能够获取统计数据导出', async () => {\n      const exportConfig = {\n        type: 'USER_OVERVIEW',\n        format: 'excel',\n        dateRange: {\n          start: '2024-01-01',\n          end: '2024-12-31'\n        },\n        includeCharts: true\n      };\n\n      const response = await request(BASE_URL)\n        .post(`${API_PREFIX}/statistics/export`)\n        .set('Authorization', `Bearer ${authToken}`)\n        .send(exportConfig);\n\n      expect(response.status).to.equal(200);\n      expect(response.headers['content-type']).to.include('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n    });\n  });\n\n  describe('权限控制测试', () => {\n    it('应该在未授权时返回401错误', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/overview`);\n\n      expect(response.status).to.equal(401);\n    });\n\n    it('应该在访问无权限的统计数据时返回403错误', async () => {\n      // 这里假设有一个受限的统计接口\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/sensitive-data`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      // 根据实际权限配置，可能返回403或404\n      expect([403, 404]).to.include(response.status);\n    });\n\n    it('应该在提交无效参数时返回400错误', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/users/growth-trend?period=invalid`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(400);\n    });\n  });\n\n  describe('性能测试', () => {\n    it('应该能够在合理时间内返回复杂统计数据', async () => {\n      const startTime = Date.now();\n      \n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/overview`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      const endTime = Date.now();\n      const responseTime = endTime - startTime;\n\n      expect(response.status).to.equal(200);\n      expect(responseTime).to.be.lessThan(3000); // 响应时间应小于3秒\n    });\n\n    it('应该能够处理大数据量的统计查询', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/statistics/users/growth-trend?period=365`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n    });\n\n    it('应该能够处理并发统计请求', async () => {\n      const promises = [];\n      \n      // 创建5个并发统计请求\n      const endpoints = [\n        '/statistics/overview',\n        '/statistics/users/growth-trend?period=30',\n        '/statistics/organizations/distribution',\n        '/statistics/activities/overview',\n        '/statistics/fees/overview'\n      ];\n\n      endpoints.forEach(endpoint => {\n        promises.push(\n          request(BASE_URL)\n            .get(`${API_PREFIX}${endpoint}`)\n            .set('Authorization', `Bearer ${authToken}`)\n        );\n      });\n\n      const responses = await Promise.all(promises);\n      \n      responses.forEach(response => {\n        expect(response.status).to.equal(200);\n        expect(response.body.success).to.be.true;\n      });\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}