{"version":3,"names":["request","require","expect","BASE_URL","process","env","API_BASE_URL","API_PREFIX","authToken","testOperationLogId","describe","before","loginResponse","post","send","username","password","status","to","equal","body","data","token","it","response","get","set","success","be","true","an","have","property","startDate","endDate","listResponse","content","length","logId","id","logData","userId","operationType","operationModule","operationDescription","requestMethod","requestUrl","requestParams","responseStatus","executionTime","ipAddress","userAgent","delete","deletedCount","a","headers","include","searchParams","page","size","queryString","URLSearchParams","toString","startTime","Date","now","endTime","responseTime","lessThan","promises","i","push","responses","Promise","all","forEach","after"],"sources":["operation-log-api.test.js"],"sourcesContent":["const request = require('supertest');\nconst { expect } = require('chai');\n\n// 测试配置\nconst BASE_URL = process.env.API_BASE_URL || 'http://localhost:8080';\nconst API_PREFIX = '/api';\n\n// 测试数据\nlet authToken = '';\nlet testOperationLogId = null;\n\ndescribe('操作日志 API 测试', () => {\n  // 测试前的准备工作\n  before(async () => {\n    // 登录获取认证token\n    const loginResponse = await request(BASE_URL)\n      .post(`${API_PREFIX}/api/auth/login`)\n      .send({\n        username: 'admin',\n        password: 'admin123'\n      });\n    \n    expect(loginResponse.status).to.equal(200);\n    authToken = loginResponse.body.data.token;\n  });\n\n  describe('操作日志查询 API', () => {\n    it('应该能够获取所有操作日志列表', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n    });\n\n    it('应该能够分页获取操作日志', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/page?page=0&size=10`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('content');\n      expect(response.body.data).to.have.property('totalElements');\n      expect(response.body.data).to.have.property('totalPages');\n      expect(response.body.data).to.have.property('size');\n      expect(response.body.data).to.have.property('number');\n    });\n\n    it('应该能够根据用户ID查询操作日志', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/user/1`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n    });\n\n    it('应该能够根据操作类型查询操作日志', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/type/CREATE`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n    });\n\n    it('应该能够根据操作模块查询操作日志', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/module/USER_MANAGEMENT`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n    });\n\n    it('应该能够根据日期范围查询操作日志', async () => {\n      const startDate = '2024-01-01T00:00:00';\n      const endDate = '2024-12-31T23:59:59';\n      \n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/date-range?startDate=${startDate}&endDate=${endDate}`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n    });\n\n    it('应该能够根据IP地址查询操作日志', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/ip/127.0.0.1`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n    });\n\n    it('应该能够根据ID获取特定的操作日志', async () => {\n      // 首先获取一个日志ID\n      const listResponse = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/page?page=0&size=1`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      if (listResponse.body.data.content.length > 0) {\n        const logId = listResponse.body.data.content[0].id;\n        \n        const response = await request(BASE_URL)\n          .get(`${API_PREFIX}/operation-logs/${logId}`)\n          .set('Authorization', `Bearer ${authToken}`);\n\n        expect(response.status).to.equal(200);\n        expect(response.body.success).to.be.true;\n        expect(response.body.data.id).to.equal(logId);\n      }\n    });\n  });\n\n  describe('操作日志统计 API', () => {\n    it('应该能够获取操作类型统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/statistics/operation-types`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n    });\n\n    it('应该能够获取操作模块统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/statistics/operation-modules`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n    });\n\n    it('应该能够获取用户操作统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/statistics/user-operations?limit=10`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n    });\n\n    it('应该能够获取每日操作统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/statistics/daily-operations?days=30`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n    });\n\n    it('应该能够获取操作响应时间统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/statistics/response-times`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('averageTime');\n      expect(response.body.data).to.have.property('maxTime');\n      expect(response.body.data).to.have.property('minTime');\n    });\n\n    it('应该能够获取错误操作统计', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/statistics/error-operations`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.be.an('array');\n    });\n  });\n\n  describe('操作日志管理 API', () => {\n    it('应该能够手动创建操作日志（仅用于测试）', async () => {\n      const logData = {\n        userId: 1,\n        username: 'testuser',\n        operationType: 'TEST',\n        operationModule: 'API_TEST',\n        operationDescription: 'API测试创建的日志',\n        requestMethod: 'POST',\n        requestUrl: '/api/test',\n        requestParams: '{\"test\": true}',\n        responseStatus: 200,\n        executionTime: 100,\n        ipAddress: '127.0.0.1',\n        userAgent: 'Test Agent'\n      };\n\n      const response = await request(BASE_URL)\n        .post(`${API_PREFIX}/operation-logs`)\n        .set('Authorization', `Bearer ${authToken}`)\n        .send(logData);\n\n      expect(response.status).to.equal(201);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('id');\n      expect(response.body.data.operationType).to.equal(logData.operationType);\n      \n      testOperationLogId = response.body.data.id;\n    });\n\n    it('应该能够批量删除过期的操作日志', async () => {\n      const startDate = '2023-01-01T00:00:00';\n      const endDate = '2023-12-31T23:59:59';\n      \n      const response = await request(BASE_URL)\n        .delete(`${API_PREFIX}/operation-logs/batch-delete`)\n        .set('Authorization', `Bearer ${authToken}`)\n        .send({\n          startDate: startDate,\n          endDate: endDate\n        });\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('deletedCount');\n      expect(response.body.data.deletedCount).to.be.a('number');\n    });\n\n    it('应该能够导出操作日志', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/export?format=csv&startDate=2024-01-01&endDate=2024-12-31`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.headers['content-type']).to.include('text/csv');\n    });\n\n    it('应该能够导出Excel格式的操作日志', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/export?format=excel&startDate=2024-01-01&endDate=2024-12-31`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.headers['content-type']).to.include('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n    });\n  });\n\n  describe('操作日志搜索 API', () => {\n    it('应该能够根据关键词搜索操作日志', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/search?keyword=用户&page=0&size=10`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('content');\n      expect(response.body.data).to.have.property('totalElements');\n    });\n\n    it('应该能够组合条件搜索操作日志', async () => {\n      const searchParams = {\n        operationType: 'CREATE',\n        operationModule: 'USER_MANAGEMENT',\n        startDate: '2024-01-01T00:00:00',\n        endDate: '2024-12-31T23:59:59',\n        page: 0,\n        size: 10\n      };\n\n      const queryString = new URLSearchParams(searchParams).toString();\n      \n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/advanced-search?${queryString}`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(200);\n      expect(response.body.success).to.be.true;\n      expect(response.body.data).to.have.property('content');\n    });\n  });\n\n  describe('权限控制测试', () => {\n    it('应该在未授权时返回401错误', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs`);\n\n      expect(response.status).to.equal(401);\n    });\n\n    it('应该在访问不存在的日志时返回404错误', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/99999`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(404);\n    });\n\n    it('应该在提交无效搜索参数时返回400错误', async () => {\n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/date-range?startDate=invalid-date&endDate=invalid-date`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      expect(response.status).to.equal(400);\n    });\n  });\n\n  describe('性能测试', () => {\n    it('应该能够在合理时间内返回大量日志数据', async () => {\n      const startTime = Date.now();\n      \n      const response = await request(BASE_URL)\n        .get(`${API_PREFIX}/operation-logs/page?page=0&size=100`)\n        .set('Authorization', `Bearer ${authToken}`);\n\n      const endTime = Date.now();\n      const responseTime = endTime - startTime;\n\n      expect(response.status).to.equal(200);\n      expect(responseTime).to.be.lessThan(5000); // 响应时间应小于5秒\n    });\n\n    it('应该能够处理并发请求', async () => {\n      const promises = [];\n      \n      // 创建10个并发请求\n      for (let i = 0; i < 10; i++) {\n        promises.push(\n          request(BASE_URL)\n            .get(`${API_PREFIX}/operation-logs/page?page=${i}&size=10`)\n            .set('Authorization', `Bearer ${authToken}`)\n        );\n      }\n\n      const responses = await Promise.all(promises);\n      \n      responses.forEach(response => {\n        expect(response.status).to.equal(200);\n        expect(response.body.success).to.be.true;\n      });\n    });\n  });\n\n  // 清理测试数据\n  after(async () => {\n    // 删除测试创建的操作日志\n    if (testOperationLogId) {\n      await request(BASE_URL)\n        .delete(`${API_PREFIX}/operation-logs/${testOperationLogId}`)\n        .set('Authorization', `Bearer ${authToken}`);\n    }\n  });\n});"],"mappings":"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","ignoreList":[]}