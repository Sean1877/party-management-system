<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="37" failures="33" errors="0" time="0.847">
    <testsuite name="tests/stores/user.test.js" timestamp="2025-08-25T12:30:44.810Z" hostname="Mac-mini.local" tests="37" failures="33" errors="0" skipped="0" time="0.049">
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 初始状态 &gt; 应该有正确的初始状态" time="0.009">
            <failure message="expected undefined to be null" type="AssertionError">
AssertionError: expected undefined to be null
 ❯ tests/stores/user.test.js:56:34
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 初始状态 &gt; 计算属性应该返回正确的初始值" time="0.003">
            <failure message="expected undefined to be &apos;&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;&apos; // Object.is equality
 ❯ tests/stores/user.test.js:62:34
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 登录功能 &gt; 应该成功处理登录" time="0.002">
            <failure message="expected &quot;login&quot; to be called with arguments: [ { username: &apos;testuser&apos;, …(1) } ]

Received: 



Number of calls: 0
" type="AssertionError">
AssertionError: expected &quot;login&quot; to be called with arguments: [ { username: &apos;testuser&apos;, …(1) } ]

Received: 



Number of calls: 0

 ❯ tests/stores/user.test.js:82:29
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 登录功能 &gt; 应该处理缺少token的登录响应" time="0.002">
            <failure message="You must provide a Promise to expect() when using .rejects, not &apos;undefined&apos;." type="TypeError">
TypeError: You must provide a Promise to expect() when using .rejects, not &apos;undefined&apos;.
 ❯ tests/stores/user.test.js:109:47
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 登录功能 &gt; 应该处理空响应" time="0">
            <failure message="You must provide a Promise to expect() when using .rejects, not &apos;undefined&apos;." type="TypeError">
TypeError: You must provide a Promise to expect() when using .rejects, not &apos;undefined&apos;.
 ❯ tests/stores/user.test.js:117:47
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 登录功能 &gt; 应该处理登录失败" time="0.001">
            <failure message="You must provide a Promise to expect() when using .rejects, not &apos;undefined&apos;." type="TypeError">
TypeError: You must provide a Promise to expect() when using .rejects, not &apos;undefined&apos;.
 ❯ tests/stores/user.test.js:126:47
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 登录功能 &gt; 应该处理没有用户数据的登录响应" time="0.001">
            <failure message="expected null to be &apos;mock-jwt-token&apos; // Object.is equality" type="AssertionError">
AssertionError: expected null to be &apos;mock-jwt-token&apos; // Object.is equality
 ❯ tests/stores/user.test.js:137:31
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 获取用户信息功能 &gt; 应该成功获取用户信息" time="0.001">
            <failure message="userStore.getUserInfo is not a function" type="TypeError">
TypeError: userStore.getUserInfo is not a function
 ❯ tests/stores/user.test.js:149:38
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 获取用户信息功能 &gt; 应该处理获取用户信息失败" time="0.001">
            <failure message="userStore.getUserInfo is not a function" type="TypeError">
TypeError: userStore.getUserInfo is not a function
 ❯ tests/stores/user.test.js:161:30
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 获取用户信息功能 &gt; 应该处理没有角色权限的用户" time="0.001">
            <failure message="userStore.getUserInfo is not a function" type="TypeError">
TypeError: userStore.getUserInfo is not a function
 ❯ tests/stores/user.test.js:169:23
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 登出功能 &gt; 应该成功处理登出" time="0">
            <failure message="expected &quot;logout&quot; to be called at least once" type="AssertionError">
AssertionError: expected &quot;logout&quot; to be called at least once
 ❯ tests/stores/user.test.js:190:30
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 登出功能 &gt; 应该在API失败时仍清理本地状态" time="0.002">
            <failure message="expected &apos;existing-token&apos; to be &apos;&apos; // Object.is equality" type="AssertionError">
AssertionError: expected &apos;existing-token&apos; to be &apos;&apos; // Object.is equality
 ❯ tests/stores/user.test.js:211:31
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 权限检查功能 &gt; hasPermission &gt; 应该在用户拥有权限时返回true" time="0.001">
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 权限检查功能 &gt; hasPermission &gt; 应该在用户没有权限时返回false" time="0.002">
            <failure message="expected true to be false // Object.is equality" type="AssertionError">
AssertionError: expected true to be false // Object.is equality
 ❯ tests/stores/user.test.js:232:55
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 权限检查功能 &gt; hasPermission &gt; 应该在权限为空或null时返回true" time="0">
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 权限检查功能 &gt; hasPermissions &gt; 应该在用户拥有所有权限时返回true" time="0.001">
            <failure message="userStore.hasPermissions is not a function" type="TypeError">
TypeError: userStore.hasPermissions is not a function
 ❯ tests/stores/user.test.js:245:26
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 权限检查功能 &gt; hasPermissions &gt; 应该在用户缺少任一权限时返回false" time="0.001">
            <failure message="userStore.hasPermissions is not a function" type="TypeError">
TypeError: userStore.hasPermissions is not a function
 ❯ tests/stores/user.test.js:250:26
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 权限检查功能 &gt; hasPermissions &gt; 应该在权限列表为空时返回true" time="0">
            <failure message="userStore.hasPermissions is not a function" type="TypeError">
TypeError: userStore.hasPermissions is not a function
 ❯ tests/stores/user.test.js:255:26
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 权限检查功能 &gt; hasAnyPermission &gt; 应该在用户拥有任一权限时返回true" time="0">
            <failure message="userStore.hasAnyPermission is not a function" type="TypeError">
TypeError: userStore.hasAnyPermission is not a function
 ❯ tests/stores/user.test.js:263:26
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 权限检查功能 &gt; hasAnyPermission &gt; 应该在用户没有任何权限时返回false" time="0">
            <failure message="userStore.hasAnyPermission is not a function" type="TypeError">
TypeError: userStore.hasAnyPermission is not a function
 ❯ tests/stores/user.test.js:268:26
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 权限检查功能 &gt; hasAnyPermission &gt; 应该在权限列表为空时返回true" time="0.001">
            <failure message="userStore.hasAnyPermission is not a function" type="TypeError">
TypeError: userStore.hasAnyPermission is not a function
 ❯ tests/stores/user.test.js:272:26
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 用户信息更新功能 &gt; 应该更新用户信息" time="0.001">
            <failure message="userStore.updateUserInfo is not a function" type="TypeError">
TypeError: userStore.updateUserInfo is not a function
 ❯ tests/stores/user.test.js:287:17
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 用户信息更新功能 &gt; 应该更新头像" time="0">
            <failure message="userStore.updateAvatar is not a function" type="TypeError">
TypeError: userStore.updateAvatar is not a function
 ❯ tests/stores/user.test.js:297:17
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 用户信息更新功能 &gt; 应该在没有用户信息时不更新头像" time="0.001">
            <failure message="userStore.updateAvatar is not a function" type="TypeError">
TypeError: userStore.updateAvatar is not a function
 ❯ tests/stores/user.test.js:307:17
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 计算属性 &gt; isLoggedIn &gt; 应该在有token时返回true" time="0.001">
            <failure message="expected false to be true // Object.is equality" type="AssertionError">
AssertionError: expected false to be true // Object.is equality
 ❯ tests/stores/user.test.js:317:38
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 计算属性 &gt; isLoggedIn &gt; 应该在没有token时返回false" time="0">
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 计算属性 &gt; userName &gt; 应该优先返回realName" time="0.003">
            <failure message="expected undefined to be &apos;真实姓名&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;真实姓名&apos; // Object.is equality
 ❯ tests/stores/user.test.js:332:36
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 计算属性 &gt; userName &gt; 应该在没有realName时返回username" time="0.001">
            <failure message="expected undefined to be &apos;用户名&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;用户名&apos; // Object.is equality
 ❯ tests/stores/user.test.js:337:36
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 计算属性 &gt; userName &gt; 应该在没有用户信息时返回空字符串" time="0.001">
            <failure message="expected undefined to be &apos;&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;&apos; // Object.is equality
 ❯ tests/stores/user.test.js:342:36
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 计算属性 &gt; userRole &gt; 应该返回角色名称" time="0.001">
            <failure message="expected undefined to be &apos;管理员&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;管理员&apos; // Object.is equality
 ❯ tests/stores/user.test.js:349:36
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 计算属性 &gt; userRole &gt; 应该在没有角色信息时返回空字符串" time="0.001">
            <failure message="expected undefined to be &apos;&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;&apos; // Object.is equality
 ❯ tests/stores/user.test.js:354:36
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 计算属性 &gt; userOrganization &gt; 应该返回组织名称" time="0.001">
            <failure message="expected undefined to be &apos;第一党支部&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;第一党支部&apos; // Object.is equality
 ❯ tests/stores/user.test.js:364:44
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 计算属性 &gt; userOrganization &gt; 应该在没有组织信息时返回空字符串" time="0">
            <failure message="expected undefined to be &apos;&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;&apos; // Object.is equality
 ❯ tests/stores/user.test.js:369:44
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 计算属性 &gt; avatar &gt; 应该返回头像URL" time="0.001">
            <failure message="expected undefined to be &apos;https://example.com/avatar.png&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;https://example.com/avatar.png&apos; // Object.is equality
 ❯ tests/stores/user.test.js:379:34
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 计算属性 &gt; avatar &gt; 应该在没有头像时返回空字符串" time="0.001">
            <failure message="expected undefined to be &apos;&apos; // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be &apos;&apos; // Object.is equality
 ❯ tests/stores/user.test.js:384:34
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 从token初始化 &gt; 应该从localStorage读取token" time="0.001">
            <failure message="expected null to be &apos;stored-token&apos; // Object.is equality" type="AssertionError">
AssertionError: expected null to be &apos;stored-token&apos; // Object.is equality
 ❯ tests/stores/user.test.js:399:30
            </failure>
        </testcase>
        <testcase classname="tests/stores/user.test.js" name="UserStore &gt; 从token初始化 &gt; 应该在没有存储token时保持空状态" time="0.001">
        </testcase>
    </testsuite>
</testsuites>
